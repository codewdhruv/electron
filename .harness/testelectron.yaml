pipeline:
  name: test-electron
  identifier: testelectron
  projectIdentifier: NgLabs
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: gitconnectordhruba
        repoName: electron
        build: <+input>
  stages:
    - stage:
        name: Builds
        identifier: Builds
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - parallel:
                  - step:
                      type: Run
                      name: Send slack notifications on failure
                      identifier: Pack_config
                      spec:
                        shell: Sh
                        command: |2-
                                if [ "$NOTIFY_SLACK" == "true" ]; then
                                  export MESSAGE="Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*."
                                  curl -g -H "Content-Type: application/json" -X POST \
                                  -d "{\"text\": \"$MESSAGE\", \"attachments\": [{\"color\": \"#FC5C3C\",\"title\": \"$CIRCLE_JOB nightly build results\",\"title_link\": \"$CIRCLE_BUILD_URL\"}]}" $SLACK_WEBHOOK
                                fi
                  - step:
                      type: Run
                      name: Send slack notifications on success
                      identifier: Send_slack_notifications_on_success
                      spec:
                        shell: Sh
                        command: |2-
                                if [ "$NOTIFY_SLACK" == "true" ]; then
                                  export MESSAGE="Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*."
                                  curl -g -H "Content-Type: application/json" -X POST \
                                  -d "{\"text\": \"$MESSAGE\", \"attachments\": [{\"color\": \"good\",\"title\": \"$CIRCLE_JOB nightly build results\",\"title_link\": \"$CIRCLE_BUILD_URL\"}]}" $SLACK_WEBHOOK
                                fi
              - step:
                  type: Run
                  name: Cleanup after testing
                  identifier: Cleanup_after_testing
                  spec:
                    shell: Sh
                    command: |2
                            if  [ "$TARGET_ARCH" == "arm64" ] &&[ "`uname`" == "Darwin" ]; then
                              killall Electron || echo "No Electron processes left running"
                              killall Safari || echo "No Safari processes left running"
                              rm -rf ~/Library/Application\ Support/Electron*
                              rm -rf ~/Library/Application\ Support/electron*
                              security delete-generic-password -l "Chromium Safe Storage" || echo "✓ Keychain does not contain password from tests"
                              security delete-generic-password -l "Electron Test Main Safe Storage" || echo "✓ Keychain does not contain password from tests"
                              security delete-generic-password -a "electron-test-safe-storage" || echo "✓ Keychain does not contain password from tests"
                              security delete-generic-password -l "electron-test-safe-storage Safe Storage" || echo "✓ Keychain does not contain password from tests"
                            elif [ "$TARGET_ARCH" == "arm" ] || [ "$TARGET_ARCH" == "arm64" ]; then
                              XVFB=/usr/bin/Xvfb
                              /sbin/start-stop-daemon --stop --exec $XVFB || echo "Xvfb not running"
                              pkill electron || echo "electron not running"
                              rm -rf ~/.config/Electron*
                              rm -rf ~/.config/electron*
                            fi
              - step:
                  type: Run
                  name: Get depot tools
                  identifier: Get_depot_tools
                  spec:
                    shell: Sh
                    command: |
                      git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
                      if [ "`uname`" == "Darwin" ]; then
                      # remove ninjalog_uploader_wrapper.py from autoninja since we don't use it and it causes problems
                      sed -i '' '/ninjalog_uploader_wrapper.py/d' ./depot_tools/autoninja
                      else
                      sed -i '/ninjalog_uploader_wrapper.py/d' ./depot_tools/autoninja
                      # Remove swift-format dep from cipd on macOS until we send a patch upstream.
                      cd depot_tools
                      fi
